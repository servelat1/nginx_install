version: '3.4'

x-logging:
  &default-logging
  options:
    max-size: '10m'
    max-file: '5'
  driver: json-file

services:
  postgres:
    image: "postgres:9.6"
    restart: unless-stopped
    logging: *default-logging
    volumes:
      - ${BASE_PATH:-/data}/pgdata:/var/lib/postgresql/data
      - /var/backup/pgsql:/var/backup/pgsql
    env_file:
      - .env

  rabbitmq:
    image: "rabbitmq:3"
    restart: unless-stopped
    logging: *default-logging
    env_file:
      - .env

  memcached:
    image: "memcached:alpine"
    restart: unless-stopped
    logging: *default-logging

  awx_web:
    image: "ansible/awx_web:6.1.0"
    restart: unless-stopped
    logging: *default-logging
    depends_on:
      - rabbitmq
      - memcached
      - postgres
    labels:
      - traefik.enable=${TRAEFIK_ENABLE:-true}
      - traefik.http.routers.awx.entrypoints=websecure
      - traefik.http.routers.awx.tls.certresolver=${TRAEFIK_CERT_RESOLVER:-default}
      - traefik.http.routers.awx.tls=true
      - traefik.http.routers.awx.rule=${AWX_URL_CONFIG:-Host(`awx.museum.naturalis.nl`)}
    volumes:
      - "${BASE_PATH:-/data}/SECRET_KEY:/etc/tower/SECRET_KEY"
    hostname: awxweb
    user: root
    env_file:
      - .env

  awx_task:
    image: "ansible/awx_task:6.1.0"
    restart: unless-stopped
    logging: *default-logging
    depends_on:
      - rabbitmq
      - memcached
      - awx_web
      - postgres
    volumes:
      - "${BASE_PATH:-/data}/SECRET_KEY:/etc/tower/SECRET_KEY"
      - "${BASE_PATH:-/data}/ansible:/data/ansible"
    hostname: awxtask
    user: root
    env_file:
      - .env

  traefik:
    image: traefik:2.2.1
    restart: unless-stopped
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_HOSTED_ZONE_ID=${AWS_HOSTED_ZONE_ID}
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.route53.acme.dnschallenge=true"
      - "--certificatesresolvers.route53.acme.dnschallenge.provider=route53"
      - "--certificatesresolvers.route53.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.route53.acme.storage=/etc/traefik/route53.json"
      - "--certificatesresolvers.default.acme.httpChallenge=true"
      - "--certificatesresolvers.default.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.default.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.default.acme.storage=/etc/traefik/acme.json"
      - "--global.sendAnonymousUsage=false"
    ports:
      - 80:80
      - 443:443
      - 8081:8080
    networks:
      - web
      - default
    labels:
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik:/etc/traefik
    logging: *default-logging

networks:
    default:
    web:
        external: true